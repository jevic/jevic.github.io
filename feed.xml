<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://0.0.0.0/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0/" rel="alternate" type="text/html" /><updated>2020-06-20T18:31:23+08:00</updated><id>http://0.0.0.0/</id><title type="html">Jevic</title><subtitle>......</subtitle><author><name>Jevic</name></author><entry><title type="html">Apache SkyWalking</title><link href="http://0.0.0.0/2020/06/06/skywalking-deploy/" rel="alternate" type="text/html" title="Apache SkyWalking" /><published>2020-06-06T18:10:46+08:00</published><updated>2020-06-06T18:10:46+08:00</updated><id>http://0.0.0.0/2020/06/06/skywalking-deploy</id><content type="html" xml:base="http://0.0.0.0/2020/06/06/skywalking-deploy/">&lt;p&gt;SkyWalking是观察性分析平台和应用性能管理系统。
提供分布式追踪、服务网格遥测分析、度量聚合和可视化一体化解决方案。&lt;/p&gt;

&lt;h2 id=&quot;apache-skywalking&quot;&gt;&lt;a href=&quot;https://github.com/apache/skywalking&quot;&gt;Apache SkyWalking&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;SkyWalking 的核心是数据分析和度量结果的存储平台，通过 HTTP 或 gRPC 方式向 SkyWalking Collecter 提交分析和度量数据，SkyWalking Collecter 对数据进行分析和聚合，存储到 Elasticsearch、MySQL、TiDB 等其一即可，最后我们可以通过 SkyWalking UI 的可视化界面对最终的结果进行查看。&lt;/p&gt;

&lt;p&gt;Skywalking 支持从多个来源和多种格式收集数据：多种语言的 Skywalking Agent 、Zipkin v1/v2 、Istio 勘测、Envoy 度量等数据格式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://skywalking.apache.org/assets/frame.jpeg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://skywalking.apache.org/assets/frame-v8.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;目前最主流的两个apm对比&quot;&gt;&lt;a href=&quot;https://www.jianshu.com/p/626cae6c0522&quot;&gt;目前最主流的两个APM对比&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/kubernetes/skywalking-pk-pinpoint.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;dockerfile&quot;&gt;Dockerfile&lt;/h2&gt;
&lt;h3 id=&quot;oap-server--ui&quot;&gt;OAP server &amp;amp; UI&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apache/skywalking-docker&quot;&gt;官方镜像 Dockerfile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;oap-server&quot;&gt;OAP server&lt;/h4&gt;
&lt;p&gt;为了可以动态的修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;alarm-settings.yml&lt;/code&gt;;
因此需要配置一个 configmap 以便于修改并重新加载alarm配置;
但是由于官方提供的默认镜像使用了&lt;code class=&quot;highlighter-rouge&quot;&gt;ENTRYPOINT&lt;/code&gt; 方式来启动;无法对命令进行修改;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;因此需要做如下调整:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;setp 1: 下载源文件&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/apache/skywalking-docker.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;setp 2: 修改对应版本的Dockerfile
    &lt;ul&gt;
      &lt;li&gt;例如: 7.0 版本&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# vim $PATH/skywalking-docker/7/7.0/oap-es7/Dockerfile

### 删除最后一行 ENTRYPOINT 或者将 ENTRYPOINT 修改为 CMD
ENTRYPOINT [&quot;bash&quot;, &quot;docker-entrypoint.sh&quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;setp 3: 重新build 镜像即可&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build -t apache/skywalking-oap-server:7.0.0-es7 .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;setp 4: 修改时区,并上传到私有仓库&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dockerfile&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM apache/skywalking-oap-server:7.0.0-es7
ENV TZ=Asia/Shanghai
RUN apk add --no-cache tzdata \
    &amp;amp;&amp;amp; ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
    &amp;amp;&amp;amp; echo $TZ &amp;gt; /etc/timezone
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build -t reg.jevic.cn/basic/skywalking-oap-server:7.0.0-es7 .
docker push reg.jevic.cn/basic/skywalking-oap-server:7.0.0-es7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;skywalking-ui&quot;&gt;skywalking-ui&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM apache/skywalking-ui:7.0.0
ENV TZ=Asia/Shanghai
RUN apk add --no-cache tzdata \
    &amp;amp;&amp;amp; ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
    &amp;amp;&amp;amp; echo $TZ &amp;gt; /etc/timezone
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build -t reg.jevic.cn/basic/skywalking-ui:7.0.0 .
docker push reg.jevic.cn/basic/skywalking-ui:7.0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;skywalking-agent&quot;&gt;skywalking-agent&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM apache/skywalking-base:7.0.0-es7 AS build

FROM busybox

ENV AGENT_PATH=/opt/skywalking/agent

COPY --from=build /skywalking/agent $AGENT_PATH

RUN set -ex \
    ## URL跟踪过滤
    &amp;amp;&amp;amp; mv $AGENT_PATH/optional-plugins/apm-trace-ignore-plugin-7.0.0.jar $AGENT_PATH/plugins/ \
    ## 网关
    &amp;amp;&amp;amp; mv $AGENT_PATH/optional-plugins/apm-spring-cloud-gateway-2.x-plugin-7.0.0.jar $AGENT_PATH/plugins/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build -t reg.jevic.cn/basic/skywalking-agent:v7 .
docker push reg.jevic.cn/basic/skywalking-agent:v7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;deployment&quot;&gt;Deployment&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;git clone yaml 文件执行部署即可&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jevic/skywalking/tree/master/deployment&quot;&gt;SkyWalking K8s deployment scripts&lt;/a&gt;&lt;/p&gt;</content><author><name>Jevic</name></author><summary type="html">SkyWalking是观察性分析平台和应用性能管理系统。 提供分布式追踪、服务网格遥测分析、度量聚合和可视化一体化解决方案。</summary></entry><entry><title type="html">kubernetes-v1.18.0 Addons quickstart</title><link href="http://0.0.0.0/2020/06/03/kubernetes-addon/" rel="alternate" type="text/html" title="kubernetes-v1.18.0 Addons quickstart" /><published>2020-06-03T20:35:46+08:00</published><updated>2020-06-03T20:35:46+08:00</updated><id>http://0.0.0.0/2020/06/03/kubernetes-addon</id><content type="html" xml:base="http://0.0.0.0/2020/06/03/kubernetes-addon/">&lt;blockquote&gt;
  &lt;p&gt;kubernetes 安装此处省略,具体详情参考之前的文档以及对应版本脚本:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.jevic.cn/2019/08/19/kubernetes-1.13.8/&quot;&gt;kubernetes 1.13.8 二进制手动部署&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/jevic/kubernetes&quot;&gt;kubernetes 二进制手动安装脚本&lt;/a&gt; :&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;分支及版本信息:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;v1.18.0 (master)&lt;/li&gt;
  &lt;li&gt;v1.13.8&lt;/li&gt;
  &lt;li&gt;v1.14.0 (只包含启动配置文件)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;role添加&quot;&gt;Role添加&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;首次安装完成后,role没有被打标签&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# kubectl get node
NAME   STATUS   ROLES    AGE    VERSION
k1     Ready    &amp;lt;none&amp;gt;   1h   v1.18.0
k2     Ready    &amp;lt;none&amp;gt;   1h   v1.18.0
k3     Ready    &amp;lt;none&amp;gt;   1h   v1.18.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl label nodes k1 node-role.kubernetes.io/master=
kubectl get node --show-labels
kubectl label nodes k2 node-role.kubernetes.io/node=
# 设置 master 一般情况下不接受负载
kubectl taint nodes k1 node-role.kubernetes.io/master=true:NoSchedule

master运行pod
kubectl taint nodes k1 node-role.kubernetes.io/master=

master不运行pod
kubectl taint nodes k1 node-role.kubernetes.io/master=:NoSchedule
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# kubectl get node
NAME   STATUS   ROLES    AGE    VERSION
k1     Ready    master   1h   v1.18.0
k2     Ready    node     1h   v1.18.0
k3     Ready    node     1h   v1.18.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;calico&quot;&gt;calico&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://docs.projectcalico.org/getting-started/kubernetes/quickstart
https://docs.projectcalico.org/getting-started/kubernetes/self-managed-onprem/onpremises
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;coredns&quot;&gt;coredns&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/coredns/deployment/tree/master/kubernetes&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -O https://raw.githubusercontent.com/coredns/deployment/master/kubernetes/coredns.yaml.sed
curl -O https://raw.githubusercontent.com/coredns/deployment/master/kubernetes/deploy.sh

./deploy.sh -i 10.254.0.2 -d cluster.local. &amp;gt; coredns.yaml
sed -i 's#coredns/coredns:1.6.7#registry.aliyuncs.com/google_containers/coredns:1.6.7#g' coredns.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;dns-hpa&quot;&gt;dns hpa&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/dns-horizontal-autoscaler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;metrics-server&quot;&gt;metrics-server&lt;/h2&gt;

&lt;p&gt;部署的YAML 文件获取方式:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kubernetes-sigs/metrics-server&quot;&gt;gitlab 官网&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;k8s源码包deploy目录: cluster/addons/metrics-server&lt;/li&gt;
  &lt;li&gt;修改image 为阿里云镜像,然后执行apply 部署即可;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;报错处理&quot;&gt;报错处理&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;metrics-server 401 Unauthorized&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;### 临时解决创建匿名用户-不太建议此操作;
kubectl create clusterrolebinding the-boss --user system:anonymous --clusterrole cluster-admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;nginx-ingress&quot;&gt;nginx-ingress&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://kubernetes.github.io/ingress-nginx/deploy/#bare-metal
wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/baremetal/deploy.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改 &lt;a href=&quot;https://kubernetes.github.io/ingress-nginx/deploy/baremetal/#via-the-host-network&quot;&gt;网络模式-host&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;template:
  spec:
    hostNetwork: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dashboard-v20&quot;&gt;dashboard v2.0&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/kubernetes/dashboard&quot;&gt;dashboard&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;apiserver-配置&quot;&gt;apiserver 配置&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# grep basic /etc/kubernetes/apiserver
		--basic-auth-file=/etc/kubernetes/basic-auth.csv \
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;用户密码文件&quot;&gt;用户密码文件&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cat /etc/kubernetes/basic-auth.csv
admin,admin,1
password123,test,2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;说明: password,user,userID&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dashboard-yaml&quot;&gt;dashboard yaml&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.....
template:
    metadata:
      labels:
        k8s-app: kubernetes-dashboard
    spec:
      containers:
        - name: kubernetes-dashboard
          image: reg.yl.com/jk8s/kubernetesui/dashboard:v2.0.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8443
              protocol: TCP
          args:
            - --auto-generate-certificates
            - --namespace=kubernetes-dashboard
            - --authentication-mode=basic
....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;授权用户&quot;&gt;授权用户&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl create clusterrolebinding  login-on-dashboard-admin --clusterrole=cluster-admin --user=admin
kubectl get clusterrolebinding login-on-dashboard-admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ingress-域名配置&quot;&gt;ingress 域名配置&lt;/h3&gt;
&lt;h5 id=&quot;添加证书&quot;&gt;添加证书&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# kubectl create secret tls dashboard-secret-jk8s --namespace=kubernetes-dashboard --cert jevic.com.pem --key jevic.com.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;nginx-配置&quot;&gt;nginx 配置&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cat ui-ing.yml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
  annotations:
    ingress.kubernetes.io/ssl-passthrough: &quot;true&quot;
    nginx.ingress.kubernetes.io/backend-protocol: &quot;HTTPS&quot;
spec:
  tls:
  - hosts:
    - jk8s.jevic.com
    secretName: dashboard-secret-jk8s
  rules:
  - host: jk8s.jevic.com
    http:
      paths:
      - path: /
        backend:
          serviceName: kubernetes-dashboard
          servicePort: 443
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;lxcfs-不建议生产使用&quot;&gt;lxcfs (不建议生产使用)&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://yq.aliyun.com/articles/566208

https://github.com/lxc/lxcfs
yum install -y fuse fuse-lib fuse-devel libtool
./bootstrap.sh &amp;amp;&amp;amp; ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install
lxcfs /var/lib/lxcfs &amp;amp;&amp;gt;/dev/null &amp;amp;


git clone https://github.com/denverdino/lxcfs-admission-webhook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;说明&quot;&gt;说明&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;lxcfs 服务建议直接make 编译安装在宿主机,而不是通过daemonset 方式以容器方式运行;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;当lxcfs 服务异常重启后, 原有的Pod 执行exec 命令登录后,无法使用free/top 等系统命令;并且通过prometheus 等监控工具也无法获取到Pod信息;但是并不影响Pod 服务;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;宿主机直接运行lxcfs服务后,当宿主机异常重启后,需要先清理掉 /var/lib/lxcfs 目录下的所有数据;否则服务无法正常启动且会导致容器也无法正常运行; 但是这样又会出现另外一个问题,当把目录数据删除后,之前运行的Pod的挂载信息就将全部丢失;同样也会出现上述第2点 所描述的异常情况;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;kube-debug可选&quot;&gt;kube-debug(可选)&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://github.com/aylei/kubectl-debug

添加配置:
https://github.com/aylei/kubectl-debug#configuration
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Jevic</name></author><summary type="html">kubernetes 安装此处省略,具体详情参考之前的文档以及对应版本脚本:</summary></entry><entry><title type="html">A Namespace Is Stuck in the Terminating State</title><link href="http://0.0.0.0/2020/05/23/k8s-terminating/" rel="alternate" type="text/html" title="A Namespace Is Stuck in the Terminating State" /><published>2020-05-23T20:35:46+08:00</published><updated>2020-05-23T20:35:46+08:00</updated><id>http://0.0.0.0/2020/05/23/k8s-terminating</id><content type="html" xml:base="http://0.0.0.0/2020/05/23/k8s-terminating/">&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;Run the following command to view the namespaces that are stuck in the Terminating state:&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# kubectl get ns|grep Terminating
cattle-prometheus      Terminating   406d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;Select a terminating namespace and view the contents of the namespace to find out the finalizer. Run the following command:&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# kubectl get ns cattle-prometheus -o yaml
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    cattle.io/appIds: cluster-monitoring,monitoring-operator
    cattle.io/status: '{&quot;Conditions&quot;:[{&quot;Type&quot;:&quot;ResourceQuotaInit&quot;,&quot;Status&quot;:&quot;True&quot;,&quot;Message&quot;:&quot;&quot;,&quot;LastUpdateTime&quot;:&quot;2019-05-09T06:34:14Z&quot;},{&quot;Type&quot;:&quot;InitialRolesPopulated&quot;,&quot;Status&quot;:&quot;True&quot;,&quot;Message&quot;:&quot;&quot;,&quot;LastUpdateTime&quot;:&quot;2019-05-09T06:34:19Z&quot;}]}'
    field.cattle.io/projectId: c-s2zlj:p-kw9lj
    lifecycle.cattle.io/create.namespace-auth: &quot;true&quot;
  creationTimestamp: &quot;2019-05-09T06:34:13Z&quot;
  deletionGracePeriodSeconds: 0
  deletionTimestamp: &quot;2019-11-13T02:50:20Z&quot;
  finalizers:
  - controller.cattle.io/namespace-auth
  labels:
    cattle.io/creator: norman
    field.cattle.io/projectId: p-kw9lj
  name: cattle-prometheus
  resourceVersion: &quot;39020658&quot;
  selfLink: /api/v1/namespaces/cattle-prometheus
  uid: 75c9cd36-7224-11e9-9de0-e23029de4489
spec: {}
status:
  phase: Terminating
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;Run the following command  remove &lt;code class=&quot;highlighter-rouge&quot;&gt;finalizers&lt;/code&gt; config
Delete the following two lines of configuration save exit&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# kubectl edit ns cattle-prometheus
.... 
finalizers:
  - controller.cattle.io/namespace-auth
....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;Finally, execute the delete command again&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl delete ns cattle-prometheus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;cause-analysis&quot;&gt;Cause analysis&lt;/h2&gt;

&lt;p&gt;Finalizers is an asynchronous pre delete hook commonly used by operators of kubernetes. When this resource is deleted, it needs to be cleaned up by the program that created the resource before deletion. After cleaning up, it needs to remove the identifier from the finalizers of the resource, and then the resource will be completely deleted&lt;/p&gt;</content><author><name>Jevic</name></author><summary type="html">Run the following command to view the namespaces that are stuck in the Terminating state:</summary></entry><entry><title type="html">Can’t kill YARN apps using ResourceManager UI</title><link href="http://0.0.0.0/2020/04/17/yar-app-kill/" rel="alternate" type="text/html" title="Can't kill YARN apps using ResourceManager UI" /><published>2020-04-17T21:30:06+08:00</published><updated>2020-04-17T21:30:06+08:00</updated><id>http://0.0.0.0/2020/04/17/yar-app-kill</id><content type="html" xml:base="http://0.0.0.0/2020/04/17/yar-app-kill/">&lt;ul&gt;
  &lt;li&gt;调整添加以下参数:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;调整core-site.xml:
hadoop.http.filter.initializers=org.apache.hadoop.security.HttpCrossOriginFilterInitializer,org.apache.hadoop.http.lib.StaticUserWebFilter

新增yare-site.xml:
yarn.resourcemanager.webapp.ui-actions.enabled=true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://community.cloudera.com/t5/Support-Questions/Can-t-kill-YARN-apps-using-ResourceManager-UI-after-HDP-3-1/td-p/243835&quot;&gt;参考文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jevic</name></author><summary type="html">调整添加以下参数:</summary></entry><entry><title type="html">Apache Tez-ui</title><link href="http://0.0.0.0/2020/04/17/tez-ui/" rel="alternate" type="text/html" title="Apache Tez-ui" /><published>2020-04-17T18:56:06+08:00</published><updated>2020-04-17T18:56:06+08:00</updated><id>http://0.0.0.0/2020/04/17/tez-ui</id><content type="html" xml:base="http://0.0.0.0/2020/04/17/tez-ui/">&lt;ul&gt;
  &lt;li&gt;版本信息:
    &lt;ul&gt;
      &lt;li&gt;Ambari 2.7.5&lt;/li&gt;
      &lt;li&gt;HDP-3.1.4.0&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tez-ui-war包&quot;&gt;tez-ui war包&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tez.apache.org/releases/&quot;&gt;Releases Downloads&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -zxf /opt/apache-tez-0.9.2-bin.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tomcat&quot;&gt;tomcat&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tomcat.apache.org/whichversion.html&quot;&gt;下载&lt;/a&gt;官方 tar.gz 安装包解压即可&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tez-ui-配置&quot;&gt;tez-ui 配置&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# mkdir -p /opt/apache-tomcat-9.0.19/webapps/tez-ui
# cp /opt/apache-tez-0.9.2-bin/tez-ui-0.9.2.war /opt/apache-tomcat-9.0.19/webapps/tez-ui
# cd /opt/apache-tomcat-9.0.19/webapps/tez-ui
# unzip tez-ui-0.9.2.war
# cat config/configs.env
...... 省略 ......
ENV = {
  hosts: {
    /*
     * Timeline Server Address:
     * By default TEZ UI looks for timeline server at http://localhost:8188, uncomment and change
     * the following value for pointing to a different address.
     */
    timeline: &quot;http://192.168.1.12:8188&quot;,

    /*
     * Resource Manager Address:
     * By default RM REST APIs are expected to be at http://localhost:8088, uncomment and change
     * the following value to point to a different address.
     */
    rm: &quot;http://192.168.1.12:8088&quot;,

    /*
     * Resource Manager Web Proxy Address:
     * Optional - By default, value configured as RM host will be taken as proxy address
     * Use this configuration when RM web proxy is configured at a different address than RM.
     */
    //rmProxy: &quot;http://localhost:8088&quot;,
  },
  ...... 省略....

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改 tomcat server.conf 端口号&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Connector port=&quot;9999&quot; protocol=&quot;HTTP/1.1&quot;
               connectionTimeout=&quot;20000&quot;
               redirectPort=&quot;8443&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;启动tomcat:
    &lt;ul&gt;
      &lt;li&gt;./bin/startup.sh&lt;/li&gt;
      &lt;li&gt;http://192.168.1.12:9999/tez-ui/ 访问页面&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tez-sitexml&quot;&gt;tez-site.xml&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;tez.history.logging.service.class&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;org.apache.tez.dag.history.logging.ats.ATSHistoryLoggingService&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;tez.tez-ui.history-url.base&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;http://192.168.1.12:9999/tez-ui/&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://community.cloudera.com/t5/Community-Articles/How-to-install-Tez-UI-Standalone-and-use-it-to-debug-Hive/ta-p/247345&quot;&gt;参考文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jevic</name></author><summary type="html">版本信息: Ambari 2.7.5 HDP-3.1.4.0</summary></entry><entry><title type="html">Oozie-YARN异常YarnException:Failed while publishing entity的解决方案</title><link href="http://0.0.0.0/2020/03/30/oozie-yarn-error/" rel="alternate" type="text/html" title="Oozie-YARN异常YarnException:Failed while publishing entity的解决方案" /><published>2020-03-30T18:56:06+08:00</published><updated>2020-03-30T18:56:06+08:00</updated><id>http://0.0.0.0/2020/03/30/oozie-yarn-error</id><content type="html" xml:base="http://0.0.0.0/2020/03/30/oozie-yarn-error/">&lt;p&gt;版本: HDP 3.1.4
Mapreduce提交任务计算时，job已经结束，但是容器仍不能关闭持续等待五分钟;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2020-03-30 21:09:30,393 INFO [Thread-75] org.apache.hadoop.yarn.event.AsyncDispatcher: Waiting for AsyncDispatcher to drain. Thread state is :WAITING
2020-03-30 21:09:30,494 INFO [Thread-75] org.apache.hadoop.yarn.event.AsyncDispatcher: Waiting for AsyncDispatcher to drain. Thread state is :WAITING
2020-03-30 21:09:30,594 INFO [Thread-75] org.apache.hadoop.yarn.event.AsyncDispatcher: Waiting for AsyncDispatcher to drain. Thread state is :WAITING
2020-03-30 21:09:30,694 INFO [Thread-75] org.apache.hadoop.yarn.event.AsyncDispatcher: Waiting for AsyncDispatcher to drain. Thread state is :WAITING
2020-03-30 21:09:30,794 INFO [Thread-75] org.apache.hadoop.yarn.event.AsyncDispatcher: Waiting for AsyncDispatcher to drain. Thread state is :WAITING
2020-03-30 21:09:30,819 ERROR [Job ATS Event Dispatcher] org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: Failed to process Event JOB_FINISHED for the job : job_1585569116633_0009
org.apache.hadoop.yarn.exceptions.YarnException: Failed while publishing entity
	at org.apache.hadoop.yarn.client.api.impl.TimelineV2ClientImpl$TimelineEntityDispatcher.dispatchEntities(TimelineV2ClientImpl.java:548)
	at org.apache.hadoop.yarn.client.api.impl.TimelineV2ClientImpl.putEntities(TimelineV2ClientImpl.java:149)
	at org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler.processEventForNewTimelineService(JobHistoryEventHandler.java:1405)
	at org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler.handleTimelineEvent(JobHistoryEventHandler.java:742)
	at org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler.access$1200(JobHistoryEventHandler.java:93)
	at org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler$ForwardingEventHandler.handle(JobHistoryEventHandler.java:1795)
	at org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler$ForwardingEventHandler.handle(JobHistoryEventHandler.java:1791)
	at org.apache.hadoop.yarn.event.AsyncDispatcher.dispatch(AsyncDispatcher.java:197)
	at org.apache.hadoop.yarn.event.AsyncDispatcher$1.run(AsyncDispatcher.java:126)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.sun.jersey.api.client.ClientHandlerException: java.net.SocketTimeoutException: Read timed out
	at com.sun.jersey.client.urlconnection.URLConnectionClientHandler.handle(URLConnectionClientHandler.java:155)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:539)
	at org.apache.hadoop.yarn.client.api.impl.TimelineV2ClientImpl.doPutObjects(TimelineV2ClientImpl.java:291)
	at org.apache.hadoop.yarn.client.api.impl.TimelineV2ClientImpl.access$000(TimelineV2ClientImpl.java:66)
	at org.apache.hadoop.yarn.client.api.impl.TimelineV2ClientImpl$1.run(TimelineV2ClientImpl.java:302)
	at org.apache.hadoop.yarn.client.api.impl.TimelineV2ClientImpl$1.run(TimelineV2ClientImpl.java:299)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hue-oozie01.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hue-oozie02.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hue-oozie3.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hue-oozie03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;发生这种情况是因为来自ATSv2的嵌入式HBASE崩溃。
需要重置ATsv2内嵌HBASE数据库&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;停止yarn服务&quot;&gt;停止Yarn服务&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Ambari - &amp;gt; Yarn-Actions- &amp;gt; Stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;删除zookeeper-上的atsv2-znode&quot;&gt;删除zookeeper 上的ATSv2 Znode&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[root@ ~]# cd /usr/hdp/3.1.4.0-315/zookeeper/bin
[root@ bin]# ./zkCli.sh
......
[zk: localhost:2181(CONNECTED) 1] rmr /atsv2-hbase-unsecure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;删除hdfs时间线服务目录内的hbase数据&quot;&gt;删除HDFS时间线服务目录内的hbase数据&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[hdfs@s05 ~]$ hdfs dfs -rm -r /atsv2/hbase
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;启动yarn服务&quot;&gt;启动Yarn服务&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Ambari - &amp;gt; Yarn-Actions- &amp;gt; Start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;再次提交服务&quot;&gt;再次提交服务&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hue-oozie04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>Jevic</name></author><summary type="html">版本: HDP 3.1.4 Mapreduce提交任务计算时，job已经结束，但是容器仍不能关闭持续等待五分钟;</summary></entry><entry><title type="html">Ambari安装oozie UI无法显示</title><link href="http://0.0.0.0/2020/03/17/oozie-ui/" rel="alternate" type="text/html" title="Ambari安装oozie UI无法显示" /><published>2020-03-17T18:56:06+08:00</published><updated>2020-03-17T18:56:06+08:00</updated><id>http://0.0.0.0/2020/03/17/oozie-ui</id><content type="html" xml:base="http://0.0.0.0/2020/03/17/oozie-ui/">&lt;blockquote&gt;
  &lt;p&gt;如下图所示,无法正常显示UI界面&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/oozie-web.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-停止oozie-服务&quot;&gt;1. 停止oozie 服务&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/oozie02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-下载扩展包&quot;&gt;2. 下载扩展包&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[root@dt-hdp01 libext]# pwd
/usr/hdp/3.1.4.0-315/oozie/libext
[root@dt-hdp01 libext]# rm -rf ext-2.2  #如果已经存在的删除即可
[root@dt-hdp01 libext]# wget http://archive.cloudera.com/gplextras/misc/ext-2.2.zip
[root@dt-hdp01 libext]# unzip -q ext-2.2.zip 
[root@dt-hdp01 libext]# chown oozie.hadoop ext-2.2 -R
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-删除旧页面文件&quot;&gt;3. 删除旧页面文件&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[root@dt-hdp01 webapps]# pwd
/usr/hdp/current/oozie-server/oozie-server/webapps
[root@dt-hdp01 webapps]# rm -rf oozie oozie.war 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-重新编译生成war包&quot;&gt;4. 重新编译生成war包&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[root@dt-hdp01 bin]# pwd
/usr/hdp/current/oozie-server/bin
[root@dt-hdp01 bin]# ./oozie-setup.sh prepare-war
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/oozie01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;5-启动oozie访问web页面即可&quot;&gt;5. 启动oozie,访问web页面即可&lt;/h3&gt;

&lt;h3 id=&quot;其他说明&quot;&gt;其他说明:&lt;/h3&gt;
&lt;p&gt;关于ext-2.2 目录的位置;
根据步骤3 当中所示的软连接地址把下载的包放置到对应位置即可;
其他集群管理工具安装的oozie大致一样;&lt;/p&gt;</content><author><name>Jevic</name></author><summary type="html">如下图所示,无法正常显示UI界面</summary></entry><entry><title type="html">Hue</title><link href="http://0.0.0.0/2020/03/16/hue/" rel="alternate" type="text/html" title="Hue" /><published>2020-03-16T18:56:06+08:00</published><updated>2020-03-16T18:56:06+08:00</updated><id>http://0.0.0.0/2020/03/16/hue</id><content type="html" xml:base="http://0.0.0.0/2020/03/16/hue/">&lt;p&gt;HUE是一个开源的Apache Hadoop UI系统，早期由Cloudera开发，后来贡献给开源社区。它是基于Python Web框架Django实现的。通过使用Hue我们可以通过浏览器方式操纵Hadoop集群。例如put、get、执行MapReduce Job等等&lt;/p&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;官网提供的只是源码只能编译安装(太耗时)&lt;/li&gt;
  &lt;li&gt;直接使用CDH 的发行版本&lt;a href=&quot;https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_cm_6_version_download.html#cm_6_version_download&quot;&gt;cm_6_version_download&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Docker 或者 kubernetes 部署 (优选)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;docker-方式部署&quot;&gt;Docker 方式部署&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;关于镜像
    &lt;ul&gt;
      &lt;li&gt;由于官方镜像实在是太大网络不好的根本很难正常下载;&lt;/li&gt;
      &lt;li&gt;这里使用阿里云镜像仓库进行FROM 构建&lt;/li&gt;
      &lt;li&gt;在从阿里云镜像拉取会快很多&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cat Dockerfile
FROM gethue/hue:latest
ENV US jevic

....
docker pull registry.cn-shenzhen.aliyuncs.com/jevic/hue:v1
docker tag registry.cn-shenzhen.aliyuncs.com/jevic/hue:v1 hue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;为了修改配置文件方便,可将配置文件进行挂载；&lt;/li&gt;
  &lt;li&gt;挂载之前先将镜像的配置文件目录拷贝出来&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# docker run -it hue /bin/bash
另外打开一个终端: 
# docker cp hue:/usr/share/hue/desktop/conf /opt/hue/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;启动hue
    &lt;ul&gt;
      &lt;li&gt;如果使用默认桥接网络你需要显示的指明hostname:&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--add-host=db1.jevic.cn:192.168.1.1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;否则容器内部无法进行域名解析&lt;/li&gt;
      &lt;li&gt;这里使用host 模式所以无需指定&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cat run.hue.sh
docker run -it -d \
--name hue \
--network host \
-v /opt/hue/conf:/usr/share/hue/desktop/conf \
hue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;修改hue的元数据库为mysql&quot;&gt;修改hue的元数据库为mysql&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;默认使用sqlite&lt;/li&gt;
  &lt;li&gt;如果不修改为Mysql hue 访问是会出现 &lt;code class=&quot;highlighter-rouge&quot;&gt;Database is locked&lt;/code&gt; 错误&lt;/li&gt;
  &lt;li&gt;需要注意: 一定要提前创建好 hue 数据库;之前在安装Ambari 时已经创建了所以此处不再列出;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;修改hueini-配置&quot;&gt;修改hue.ini 配置&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;需要修改两处配置项,参考图例&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hdp-hue-mysql.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    name=mysqldb
    engine=mysql
    host=db1.jevic.cn
    port=3306
    user=hue
    password=Hue@123456
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hdp-hue-mysql02.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    engine=mysql
    host=db1.jevic.cn
    port=3306
    user=hue
    password=Hue@123456
    name=hue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;初始化数据库&quot;&gt;初始化数据库&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@mdb2:/usr/share/hue/build/env# ./bin/hue syncdb
root@mdb2:/usr/share/hue/build/env# ./bin/hue migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hue-init-mysql.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;重启服务:
 docker restart hue&lt;/p&gt;

&lt;p&gt;其他的配置项根据需要逐一调整即可,具体参数示例可参考&lt;a href=&quot;https://docs.gethue.com/administrator/configuration/connectors/&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;参考文档
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/087404300cda&quot;&gt;Hue&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/zlslch/p/6819622.html?utm_source=itdadao&amp;amp;utm_medium=referral&quot;&gt;Hue 问题汇总&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jevic</name></author><summary type="html">HUE是一个开源的Apache Hadoop UI系统，早期由Cloudera开发，后来贡献给开源社区。它是基于Python Web框架Django实现的。通过使用Hue我们可以通过浏览器方式操纵Hadoop集群。例如put、get、执行MapReduce Job等等</summary></entry><entry><title type="html">Ambari-Cluster配置(三)</title><link href="http://0.0.0.0/2020/03/07/ambari-cluster/" rel="alternate" type="text/html" title="Ambari-Cluster配置(三)" /><published>2020-03-07T20:35:06+08:00</published><updated>2020-03-07T20:35:06+08:00</updated><id>http://0.0.0.0/2020/03/07/ambari-cluster</id><content type="html" xml:base="http://0.0.0.0/2020/03/07/ambari-cluster/">&lt;h1 id=&quot;ambari-集群配置&quot;&gt;Ambari 集群配置&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hdp-install-01.png&quot; alt=&quot;image&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hdp-install-02.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;选择你需要安装的服务然后进入到配置界面&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;调整配置项&quot;&gt;调整配置项&lt;/h2&gt;
&lt;h3 id=&quot;hadoop-hue-依赖配置&quot;&gt;hadoop hue 依赖配置&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;检查确认是否有下列配置项,后面hue 要使用;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.gethue.com/administrator/configuration/connectors/#hdfs&quot;&gt;hue for HDFS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## core-site.xml
hadoop.proxyuser.falcon.groups=*
hadoop.proxyuser.falcon.hosts=*
hadoop.proxyuser.hbase.groups=*
hadoop.proxyuser.hbase.hosts=*
hadoop.proxyuser.hcat.groups=*
hadoop.proxyuser.hcat.hosts=*
hadoop.proxyuser.httpfs.groups=*
hadoop.proxyuser.httpfs.hosts=*
hadoop.proxyuser.hue.groups=*
hadoop.proxyuser.hue.hosts=*
hadoop.proxyuser.root.hosts=*
hadoop.proxyuser.root.groups=*
hadoop.proxyuser.yarn.hosts=*
hadoop.proxyuser.yarn.groups=*
hadoop.proxyuser.mapred.hosts=*
hadoop.proxyuser.mapred.groups=*

## hdfs-site.xml
# 关闭权限
dfs.permissions.enabled=false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hdp-install-hadoop.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;hive&quot;&gt;Hive&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;连接数据库时使用,ambari 页面会有提示根据提示进行操作即可&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[root@dt1 ~]# ambari-server setup --jdbc-db=mysql --jdbc-driver=/usr/share/java/mysql-connector-java-5.1.48-bin.jar
Using python  /usr/bin/python
Setup ambari-server
Copying /usr/share/java/mysql-connector-java-5.1.48-bin.jar to /var/lib/ambari-server/resources
If you are updating existing jdbc driver jar for mysql with mysql-connector-java-5.1.48-bin.jar. Please remove the old driver jar, from all hosts. Restarting services that need the driver, will automatically copy the new jar to the hosts.
JDBC driver was successfully initialized.
Ambari Server 'setup' completed successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hdp-install-hive.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;oozie&quot;&gt;Oozie&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.gethue.com/administrator/configuration/connectors/#apache-oozie&quot;&gt;hue oozie&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ambari 初始化安装时添加下列参数&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## oozie-site.xml
oozie.service.ProxyUserService.proxyuser.hive.groups=*
oozie.service.ProxyUserService.proxyuser.hive.hosts=*
oozie.service.ProxyUserService.proxyuser.hue.groups=*
oozie.service.ProxyUserService.proxyuser.hue.hosts=*
oozie.processing.timezone=GMT+0800
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hdp-install-oozie.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;最终安装结果如下图&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hdp-install-end.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;hadoop-ha&quot;&gt;Hadoop HA&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;ambari 默认安装hadoop时,没有启用HA 高可用,所以当安装完成后需要再次点击启用HA&lt;/li&gt;
  &lt;li&gt;参考&lt;a href=&quot;http://www.louisvv.com/archives/1490.html&quot;&gt;Ambari Hadoop安装启用HA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hdp-hadoop-ha-01.png&quot; alt=&quot;image&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hdp-hadoop-ha-02.png&quot; alt=&quot;image&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hdp-hadoop-ha-03.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;剩下的步骤根据提示一步步操作即可!&lt;/p&gt;

&lt;h2 id=&quot;yarn-ha&quot;&gt;yarn HA&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;与hadoop ha 一样点击开启HA,根据步骤操作即可&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;hadoop-httpfs&quot;&gt;hadoop-httpfs&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yum install -y hadoop-httpfs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装完成后,无法正常启动;原因是由于缺失相关目录:
&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/hadoop-httpfs-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;打补丁:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;下载 &lt;a href=&quot;https://github.com/jevic/bigdata/blob/master/ambari/hadoop-httpfs_3.x_patch.tar.gz&quot;&gt;hadoop-httpfs_3.x_patch.tar.gz&lt;/a&gt;;解压后执行patch.sh&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;启动hadoop-httpfs&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## root用户操作
# mkdir -p /var/run/hadoop/httpfs
# chmod 777 /var/run/hadoop/httpfs
# /usr/hdp/current/hadoop-httpfs/etc/rc.d/init.d/hadoop-httpfs start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Jevic</name></author><summary type="html">Ambari 集群配置</summary></entry><entry><title type="html">Ambari-Server&amp;amp;agent安装配置(二)</title><link href="http://0.0.0.0/2020/03/07/ambari-server-install/" rel="alternate" type="text/html" title="Ambari-Server&amp;agent安装配置(二)" /><published>2020-03-07T18:56:06+08:00</published><updated>2020-03-07T18:56:06+08:00</updated><id>http://0.0.0.0/2020/03/07/ambari-server-install</id><content type="html" xml:base="http://0.0.0.0/2020/03/07/ambari-server-install/">&lt;h2 id=&quot;数据库配置&quot;&gt;数据库配置&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;说明：数据库表名设置为大小写不敏感，修改mysql数据库配置文件my.cnf 即可

# mysql -u root -p123456 -e &quot;show variables like 'lower_case_table_names';&quot;
mysql: [Warning] Using a password on the command line interface can be insecure.
+------------------------+-------+
| Variable_name          | Value |
+------------------------+-------+
| lower_case_table_names | 1     |
+------------------------+-------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;创建数据库&quot;&gt;创建数据库&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;根据你需要安装的服务创建对应的数据库及配置访问信息;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create database ambari character set utf8;
GRANT ALL PRIVILEGES ON ambari.* TO 'ambari'@'%' IDENTIFIED BY 'Ambari_123';
FLUSH PRIVILEGES;
create database hive character set latin1;
GRANT ALL PRIVILEGES ON hive.* TO 'hive'@'%' IDENTIFIED BY 'Hive@123';
FLUSH PRIVILEGES;
create database oozie character set utf8;
GRANT ALL PRIVILEGES ON oozie.* TO 'oozie'@'%' IDENTIFIED BY 'Oozie@123';
FLUSH PRIVILEGES;
create database ranger character set utf8;
GRANT ALL PRIVILEGES ON rangeradmin.* TO 'rangeradmin'@'%' IDENTIFIED BY 'Ranger@123';
FLUSH PRIVILEGES;
create database superset character set utf8;
GRANT ALL PRIVILEGES ON superset.* TO 'superset'@'%' IDENTIFIED BY 'Superset@123';
FLUSH PRIVILEGES;
create database hbase character set latin1;
GRANT ALL PRIVILEGES ON hbase.* TO 'hbase'@'%' IDENTIFIED BY 'Hbase@123';
FLUSH PRIVILEGES;

## hue 
create database hue character set utf8;
GRANT ALL PRIVILEGES ON hue.* TO 'hue'@'%' IDENTIFIED BY 'Hue@123456';
FLUSH PRIVILEGES;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;主机初始化&quot;&gt;主机初始化&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;JDK 安装&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;主机名配置
        &lt;ul&gt;
          &lt;li&gt;1.1.1.1 node.xxx.xx&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;双机互相&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    ssh-keygen -t rsa
    ssh-copy-id NODE_NAME
    ## 也可以使用sshpass 去除密码输入提示
    yum install -y sshpass
    sshpass PASSWORD -e ssh-copy-id NODE_NAME 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;初始化脚本:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/jevic/bigdata/blob/master/ambari/initos.sh&quot;&gt;initos.sh&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ambari-server&quot;&gt;ambari-server&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Current Version: 2.6.5.0-292 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;公共仓库]
http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.5.0
http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.22/repos/centos7


&lt;span class=&quot;c&quot;&gt;## &lt;/span&gt;
yum install ambari-server &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## jdbc 驱动下载地址 &lt;/span&gt;
https://cdn.mysql.com//Downloads/Connector-J/mysql-connector-java-5.1.48.tar.gz
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@jevic-t01 ~]# &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;server.jdbc.driver.path /etc/ambari-server/conf/ambari.properties 
server.jdbc.driver.path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/share/java/mysql-connector-java-5.1.48-bin.jar


&lt;span class=&quot;c&quot;&gt;## 初始化安装&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@dt1 ~]# ambari-server setup
Using python  /usr/bin/python
Setup ambari-server
Checking SELinux...
SELinux status is &lt;span class=&quot;s1&quot;&gt;'disabled'&lt;/span&gt;
Customize user account &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;ambari-server daemon &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;y/n] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;? y
Enter user account &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;ambari-server daemon &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:ambari
Adjusting ambari-server permissions and ownership...
Checking firewall status...
Checking JDK...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] Oracle JDK 1.8 + Java Cryptography Extension &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;JCE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Policy Files 8
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2] Oracle JDK 1.7 + Java Cryptography Extension &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;JCE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Policy Files 7
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3] Custom JDK
&lt;span class=&quot;o&quot;&gt;==============================================================================&lt;/span&gt;
Enter choice &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 3
WARNING: JDK must be installed on all hosts and JAVA_HOME must be valid on all hosts.
WARNING: JCE Policy files are required &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;configuring Kerberos security. If you plan to use Kerberos,please make sure JCE Unlimited Strength Jurisdiction Policy Files are valid on all hosts.
Path to JAVA_HOME: /usr/local/java
Validating JDK on Ambari Server...done.
Checking GPL software agreement...
GPL License &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;LZO: https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html
Enable Ambari Server to download and install GPL Licensed LZO packages &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;y/n] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;? n
Completing setup...
Configuring database...
Enter advanced database configuration &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;y/n] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;? y
Configuring database...
&lt;span class=&quot;o&quot;&gt;==============================================================================&lt;/span&gt;
Choose one of the following options:
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] - PostgreSQL &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Embedded&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2] - Oracle
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3] - MySQL / MariaDB
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;4] - PostgreSQL
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;5] - Microsoft SQL Server &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Tech Preview&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;6] - SQL Anywhere
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;7] - BDB
&lt;span class=&quot;o&quot;&gt;==============================================================================&lt;/span&gt;
Enter choice &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 3
Hostname &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;localhost&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: db1.jevic.cn
Port &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3306&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
Database name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ambari&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: ambari
Username &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ambari&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
Enter Database Password &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;bigdata&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
Re-enter password:
Configuring ambari database...
Configuring remote database connection properties...
WARNING: Before starting Ambari Server, you must run the following DDL against the database to create the schema: /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql
Proceed with configuring remote database connection properties &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;y/n] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;?
Extracting system views...
ambari-admin-2.6.2.2.1.jar
...........
Adjusting ambari-server permissions and ownership...
Ambari Server &lt;span class=&quot;s1&quot;&gt;'setup'&lt;/span&gt; completed successfully.



&lt;span class=&quot;c&quot;&gt;## 将Ambari数据库脚本导入到数据库&lt;/span&gt;
mysql &lt;span class=&quot;nt&quot;&gt;-uambari&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pxxx&lt;/span&gt;
use ambari&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql


&lt;span class=&quot;c&quot;&gt;## 启动ambari server&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ambari-server start&lt;/span&gt;

在浏览器中访问ip:8080，默认登录名：admin 密码:admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ambari-agent&quot;&gt;ambari-agent&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;配置yum 源
yum -y install ambari-agent

#ambari-agent 打ssl认证有问题，需要关闭
grep -q &quot;^force_https_protocol=PROTOCOL_TLSv1_2&quot; /etc/ambari-agent/conf/ambari-agent.ini ||sed -i 's@\[security\]@&amp;amp;\nforce_https_protocol=PROTOCOL_TLSv1_2@g' /etc/ambari-agent/conf/ambari-agent.ini

grep -q &quot;^verify=diable&quot; /etc/python/cert-verification.cfg || sed -i 's@\[https\]@&amp;amp;\nverify=diable@g' /etc/python/cert-verification.cfg 

/usr/sbin/ambari-agent reset ServiceNAME
/usr/sbin/ambari-agent start 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;后记&quot;&gt;后记&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;以下是在安装ambari 2.7.4时遇到的问题(安装方式一样)&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;初始化集群加入主机,状态一直为: preparing&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;解决方案: sudo chown -R ambari /var/run/ambari-server&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;HDFS 开启HA时报错 500&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;500 status code received on GET method for API: /api/v1/stacks/HDP/versions/2.4/recommendations 
Error message: Error occured during stack advisor command invocation: Cannot create /var/run/ambari-server/stack-recommendations&lt;/p&gt;

&lt;p&gt;解决方案：sudo chown -R ambari /var/run/ambari-server&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;ntpd 服务无法开机自启动
&lt;img src=&quot;https://raw.githubusercontent.com/jevic/images/master/hdp/ambari-init-ntpd.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;解决方案: systemctl disable chronyd&lt;/p&gt;</content><author><name>Jevic</name></author><summary type="html">数据库配置 ``` 说明：数据库表名设置为大小写不敏感，修改mysql数据库配置文件my.cnf 即可</summary></entry></feed>